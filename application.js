// Generated by Haxe 3.4.4
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var base_Bg1 = function() {
	nanofl.MovieClip.call(this,nanofl.Player.library.getItem("BG1"));
};
base_Bg1.__super__ = nanofl.MovieClip;
base_Bg1.prototype = $extend(nanofl.MovieClip.prototype,{
});
var Bg1 = function() {
	base_Bg1.call(this);
};
Bg1.__super__ = base_Bg1;
Bg1.prototype = $extend(base_Bg1.prototype,{
	init: function() {
	}
	,onEnterFrame: function() {
	}
	,onMouseDown: function(e) {
	}
});
var Main = function(symbol) {
	this.i = 0;
	this.bg1_mov = new Bg1();
	this.version = "1.0.0 #1";
	nanofl.MovieClip.call(this,symbol);
};
Main.__super__ = nanofl.MovieClip;
Main.prototype = $extend(nanofl.MovieClip.prototype,{
	init: function() {
		this.addChild(this.bg1_mov);
		this.getFV(this.stage.canvas.baseURI);
	}
	,getFV: function(s) {
		var a;
		var b = { };
		s = s.split("?")[1];
		a = s.split("&");
		var _g1 = 0;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a1 = a[i].split("=");
			b[a1[0]] = a1[1];
		}
		console.log(b);
		return b;
	}
});
createjs.DisplayObject.prototype.setBounds = function(x, y, width, height) { this._bounds = x != null ? (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height) : null; };
